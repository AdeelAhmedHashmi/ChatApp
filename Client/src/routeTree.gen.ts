/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ChatIndexRouteImport } from './routes/chat/index'
import { Route as UserSettingRouteImport } from './routes/user/setting'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthLoginRouteImport } from './routes/auth/login'

const ChatIndexRoute = ChatIndexRouteImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserSettingRoute = UserSettingRouteImport.update({
  id: '/user/setting',
  path: '/user/setting',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/user/setting': typeof UserSettingRoute
  '/chat': typeof ChatIndexRoute
}
export interface FileRoutesByTo {
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/user/setting': typeof UserSettingRoute
  '/chat': typeof ChatIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/user/setting': typeof UserSettingRoute
  '/chat/': typeof ChatIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/auth/login' | '/auth/signup' | '/user/setting' | '/chat'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth/login' | '/auth/signup' | '/user/setting' | '/chat'
  id: '__root__' | '/auth/login' | '/auth/signup' | '/user/setting' | '/chat/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  UserSettingRoute: typeof UserSettingRoute
  ChatIndexRoute: typeof ChatIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/chat/': {
      id: '/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/setting': {
      id: '/user/setting'
      path: '/user/setting'
      fullPath: '/user/setting'
      preLoaderRoute: typeof UserSettingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  UserSettingRoute: UserSettingRoute,
  ChatIndexRoute: ChatIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
